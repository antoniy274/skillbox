/*Реализуйте частный случай умножения матрицы на матрицу, а именно — умножение вектора на матрицу. 
Данная операция также весьма распространена в компьютерной индустрии в целом и в компьютерное графике в частности, 
поэтому это будет хорошим упражнением.

Итак, у нас есть 4-х компонентный вектор V представленный с помощью массива, и матрица M размером 4х4, 
представленная в виде двумерного массива. Их произведением будет новый 4-х компонентный вектор R. 
Его компоненты будут суммой произведений компонент вектора V на строку матрицы M. 
Индекс столбца при этом равен индексу соответствующей компоненты вектора R, который мы и рассчитываем в текущий момент времени.

Все входные данные, матрица M и вектор V вносятся из пользовательского ввода.  
Итоговый вектор R надо вывести в консоль (std::cout). Тип данных элементов - всегда float. 
Желательно реализовать этот алгоритм с помощью вложенного цикла на умножение колонки.*/


//Не хватает примеров

#include <iostream>
#include <vector>
#include <cmath>

int main()
{
    std::vector<float> V(4);
    std::vector<float> R(4);
    float matrix[4][4];
    
    std::cout << "Enter matrix[4][4] elements: ";
    for (auto i = 0; i < 4; ++i) {
        for (auto j = 0; j < 4; ++j) {
            std::cin >> matrix[i][j];
        }
    }

    std::cout << "Enter vector[4] elements for multiplication: ";
    for (auto i = 0; i < 4; ++i) {
        float element;
        std::cin >> V[i];
    }

   
    for (auto i = 0; i < 4; ++i) {
        R[i] = 0;
    }

    for (auto i = 0; i < 4; ++i) {
        for (auto j = 0; j < 4; ++j) {
            R[i] += (matrix[i][j] * V[j]);
        }
    }

    std::cout << "Resulting vector: ";
    for (auto i = 0; i < 4; ++i) {
        std::cout << R[i] << " ";
    }
}